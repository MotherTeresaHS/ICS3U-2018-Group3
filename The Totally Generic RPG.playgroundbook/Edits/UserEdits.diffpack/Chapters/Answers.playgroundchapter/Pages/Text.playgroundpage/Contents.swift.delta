<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// Created by: Miguel Sucalit
// Created: Nov 2018 - Jan 2019
// RPG Text Version


//Functions
//Used whenever player fights a monster
func battle(playerRoll: Int, monsterRoll: Int, addIn: Int) -&gt; Bool{
    
    if playerRoll + addIn &gt;= monsterRoll {
        return true
    }else {
        return false
    }
}

//Used whenever player is exploring and possibly finds treasure
func coinFind(playerRoll: Int, chance: Int) -&gt; Bool {
    let treasure = playerRoll + chance
    
    if treasure &gt;= 10 {
        return true
    }else {
        return false
    }
}

//Global Variables 
//All the player Stats
var health = 20
var enemyHealth = 30
var attack = 5
var magic = 0
var luck = 1
var mana = 5
var wallet = 10
var bonus = 0
var killcountForest = 0
var killCountDungeon = 0
var score = 0

//Variables Saved For Highscores
var heroName : String = "N/A"
var heroWeapon : String = "N/A"
var heroRole : String = "N/A"
var heroWallet : Int = 0
var heroAttack : Int = 0
var heroMagic : Int = 0
var heroHealth : Int = 0
var heroLuck : Int = 0
var heroKills : Int = 0
var heroScore : Int = 0
var bookTwoUnlock : Bool = false

//Gets The Current Highscores Saved 
 heroName = UserDefaults.standard.string(forKey: "hname") ?? heroName
 heroWeapon = UserDefaults.standard.string(forKey: "hweapon") ?? heroWeapon
 heroRole = UserDefaults.standard.string(forKey: "hrole") ?? heroRole
 heroWallet = UserDefaults.standard.integer(forKey: "hwallet")
 heroAttack = UserDefaults.standard.integer(forKey: "hattack")
 heroMagic = UserDefaults.standard.integer(forKey: "hmagic")
 heroHealth = UserDefaults.standard.integer(forKey: "hhealth")
 heroLuck = UserDefaults.standard.integer(forKey: "hluck")
 heroKills = UserDefaults.standard.integer(forKey: "hkills")
 heroScore = UserDefaults.standard.integer(forKey: "hscore")
bookTwoUnlock = UserDefaults.standard.bool(forKey: "btu")

//Bools For Story Continuation 
var actTwo = false
var finalBoss = false
var playGame1 = false
var playGame2 = false
var cheatMenu = false
var cheatsOn = false
var endGame = false

//Player health reserved for each new story arc
var healthPartTwo = 30

//Array that holds the probabilities of each event happening 
var randomScenarios : [Int] = [1,1,1,1,2,2,3,3,3].shuffled()
var alleywayScenarios : [Int] = [1,1,1,2,2,3,3,3,3,3,4,4,4].shuffled()

//Arrays that hold dice values
var playerDice : [Int] = [1,2,3,4,5,6].shuffled() 
var monsterDice : [Int] = [10,11,12,13,14,15,16,17,18,19,20,100].shuffled()
var monsterDice2 : [Int] = [5,6,7,8,9,10].shuffled()
var losePenalty : [Int] = [10,10,10,15,15].shuffled()
var coinValue : [Int] = [1,1,1,2,2,3].shuffled()

//Array that holds monster IDs
var monsterNameForest : [String] = ["slime","slime","slime","bandit","bandit","kobold","goblin"].shuffled()
var monsterNameDungeon : [String] = ["orc","wyvern","minotaur","swarm of bats","swarm of bats","swarm of bats"].shuffled()

//Value of game mechanic variables
var coinGive = coinValue[0]
var healthLose = losePenalty[0]
var forestMonster = monsterNameForest[0]
var dungeonMonster = monsterNameDungeon[0]

    //GAMEPLAY
sleep(1)
show("____________________________")
show("THE TOTALLY GENERIC RPG")
show("____________________________")
sleep(1)
show("")
show("____________________________")
show("Developed By: Miguel Sucalit")
show("____________________________")
sleep(1)
show("[ PLAY / CHEATS / HIGH SCORE")
let intro = askForChoice(options: ["PLAY", "CHEATS", "HIGHSCORE"])
if intro == "CHEATS" {
    show("Feel free to modify the stats below")
    show("____________________________")
    while cheatMenu == false {
    health = askForNumber("HEALTH")
    attack = askForNumber("ATTACK")
    magic = askForNumber("MAGIC")
    luck = askForNumber("LUCK")
        show("____________________________")
        show("[ PLAY GAME / GO BACK ]")
        let intro2 = askForChoice(options: ["PLAY GAME", "GO BACK"]) 
        if intro2 == "PLAY GAME" {
            cheatMenu = true
            playGame1 = true
            cheatsOn = true
        }
}
}else if intro == "HIGHSCORE" {
    show("____________________________")
    show("____________________________")
    show("HIGH SCORE")
    show("____________________________")
    show("____________________________")
    show("HERO NAME: \(heroName)")
    show("____________________________")
    show("ROLE: \(heroRole)")
    show("WEAPON: \(heroWeapon)")
    show("____________________________")
    show("TOTAL KILLS: \(heroKills)")
    show("____________________________")
    show("WALLET: $\(heroWallet)")
    show("____________________________")
    show("HP: \(heroHealth)")
    show("ATK: \(heroAttack)")
    show("MAG: \(heroMagic)")
    show("LUCK: \(heroLuck)")
    show("____________________________")
    show("____________________________")
    
}else if intro == "PLAY" {
    show("[ BOOK 1 / BOOK 2 ]")
    sleep(1)
    show("")
    show("BOOK 1: The Generic Heroes' Story")
    show("BOOK 2: The Forgotten Fable [DEMO]")
    sleep(2)
    show("[ Must have completed BOOK 1 to skip to BOOK 2. ]")
    sleep(1)
    let bookChoice = askForChoice(options: ["BOOK 1", "BOOK 2"]) 
    if bookChoice == "BOOK 1" {
    playGame1 = true 
}else if bookChoice == "BOOK 2" {
        if bookTwoUnlock == true {
            playGame2 = true
        }else {
            show("You have not yet unlocked BOOK 2.")
            sleep(1)
            playGame1 = true
        }
    }
}

if playGame1 == true {
    show("")
    show("")
    show("")
show("You are a hero travelling into the unknown territories of the Land of Grimorand.")
    sleep(1)
show("Tell me hero, ")
    sleep(1)
show("What is thy name?")
    sleep(1)
let name = ask("Enter Name")

show("\(name), I believe there are great things in store for you,")
show("Your ship is ready, we will set sail to Grimorand shortly.")
    
    sleep(1)
    
    show("Are you ready?")
    show("Prepared for what lies ahead?")
    show("[ Yes / No ]")
    let q = askForChoice(options: ["I'm ready!", "How about I pls turn back now??"])
    
    if q == "I'm ready!" {
        show("I like your enthusiam! May the spark within you grow ever most bright!!")
    }else if q == "How about I pls turn back now??" {
        show("Sometimes we have to make choices we dont like to make..")
        show("The world needs you \(name)! Don't ever forget that!")
        sleep(1)
        show("May the odds forever be in your favour!")
    }
    
sleep(1)

show("")
show("")
show("____________________________")
show("_______‚õµÔ∏è___________üèî____")
show("____________________________")

show("...")
sleep(1)
show("...")
show("____________________________")
show("__BOOK ONE:_____________")
show("____________________________")
show("__THE HEROES JOURNEY______")
show("____________________________")

sleep(1)
show("...")

show("Alas you have finally made it to Grimorand! But before we go any further,")
    sleep(2)
show("Look at you! You can't possibly think of embarking on such a treacherous journey in such whimsly attire!")
    sleep(2)
show("Which reminds me, what class were you again?")
sleep(2)
    
show("____________________________")
show("Knight : +8 ATK || +10 HP || +1 LUCK ")
show("Rogue : +3 ATK || +6 HP || +3 LUCK")
show("Mage : +5 MAG || +4 HP || +5 MP || +2 LUCK")
show("____________________________")

//Lets player choose what role he/she chooses to play as
let role = askForChoice(options: ["knight", "rogue", "mage"])

if role == "knight" {
     health = health + 10
     attack = attack + 8
     luck = luck + 1
}else if role == "rogue" {
    health = health + 6 
    attack = attack + 3 
    luck = luck + 3
}else if role == "mage" {
    health = health + 4
    magic = magic + 5
    luck = luck + 2
    mana = mana + 5 
}

show("A \(role) huh, figured as much.")
show("If you plan on going in the dungeons around here you're going to need a weapon.")

sleep(2)
show("____________________________")
show("Knife : +3 ATK || +3 LUCK")
show("Sword : +7 ATK")
show("Staff : +10 MAG || +3 MP")
show("____________________________")

//Lets player choose a weapon for combat.
var weapon = askForChoice(options: ["knife", "sword", "staff"])

if weapon == "sword" {
    attack = attack + 7
}else if weapon == "knife" {
    attack = attack + 3 
    luck = luck + 3
}else if weapon == "staff" {
    magic = magic + 10
    mana = mana + 3 
}
    sleep(1)
show("Woah, you brought a \(weapon) with you!? As always you come prepared.")
show("It seems you are ready to begin your journey, \(name).")
show("Travel safe!")
sleep(2)

show("____________________________")
show("__CHAPTER ONE:______________")
show("____________________________")
show("__THE ADVENTURE BEGINS____")
show("____________________________")

sleep(1)
    
    //Procedures
    //Saves and Shows Highscore Procedure 
    func showHighscore(){
        if score &gt; heroScore &amp;&amp; cheatsOn == false {
        //SAVES
        heroName = name
        heroRole = role
        heroLuck = luck
        heroWeapon = weapon
        heroWallet = wallet
        heroHealth = healthPartTwo
        heroAttack = attack
        heroMagic = magic
        heroKills = killcountForest + killCountDungeon 
        UserDefaults().set(heroName, forKey: "hname")
        UserDefaults().set(heroRole, forKey: "hrole")
        UserDefaults().set(heroLuck, forKey: "hluck")
        UserDefaults().set(heroWeapon, forKey: "hweapon")
        UserDefaults().set(heroWallet, forKey: "hwallet")
        UserDefaults().set(heroHealth, forKey: "hhealth")
        UserDefaults().set(heroAttack, forKey: "hattack")
        UserDefaults().set(heroMagic, forKey: "hmagic")
        UserDefaults().set(heroScore, forKey: "hscore")
        UserDefaults().set(heroKills, forKey: "hkills")
            //SHOWS
        show("____________________________")
        show("____________________________")
        show("HIGH SCORE")
        show("____________________________")
        show("____________________________")
        show("HERO NAME: \(heroName)")
        show("____________________________")
        show("ROLE: \(heroRole)")
        show("WEAPON: \(heroWeapon)")
        show("____________________________")
        show("TOTAL KILLS: \(heroKills)")
        show("____________________________")
        show("WALLET: $\(heroWallet)")
        show("____________________________")
        show("HP: \(heroHealth)")
        show("ATK: \(heroAttack)")
        show("MAG: \(heroMagic)")
        show("LUCK: \(heroLuck)")
        show("____________________________")
        show("____________________________")
    }
    }
    
//A loop that goes on that emulates the "hero" exploring the land.
//Ends when the player's health drops to/ below 0.
//Player is then greeted with a Game Over dialogue.

while health &gt; 0 {
    
    show("[ REST / EXPLORE / STATS ]")
    
    let action = askForChoice(options: ["REST", "EXPLORE", "STATS"])
    
    if action == "REST" {
        show("You rested and restored your health and mana by 1.")
        health = health + 1
        mana = mana + 1
        
    }else if action == "EXPLORE" {
        
        //Randomizes Outcomes 
        monsterNameForest.shuffle()
        randomScenarios.shuffle()
        playerDice.shuffle()
        monsterDice.shuffle()
        losePenalty.shuffle()
        coinValue.shuffle()

        let gameplay = randomScenarios[0]
        
        if gameplay == 1 {
            //Battle Sequence
            forestMonster = monsterNameForest[0]
            
            show("You stumbled across a \(forestMonster)!‚öîÔ∏è")
            let heroRoll = playerDice[0]
            let mobRoll = monsterDice[0]
            
            if role == "mage" {
                bonus = bonus + magic + (attack / 10)
            }else if role == "knight" {
                bonus = bonus + attack
            }else if role == "rogue"{
                bonus = bonus + (attack + luck / 2 )
                
            }
            
            show("You dealt damage with your \(weapon)!")
            sleep(1)
            show("")
            let victor = battle(playerRoll: heroRoll, monsterRoll: mobRoll, addIn: bonus)
            
            if victor == true {
                coinGive = coinValue[0]
                show("The \(forestMonster) tried to retaliate...but failed.")
                show("You deal a final blow to the \(forestMonster) with your \(weapon)")
                show("You have slain the \(forestMonster)!")
                show("You have won $\(coinGive)")
                wallet = wallet + coinGive
                killcountForest = killcountForest + 1
                score = score + 1
                
            }else if victor == false {
                healthLose = losePenalty[0]
                show("The \(forestMonster) tried to retaliate...and struck you back!")
                show("You loss \(healthLose) health...")
                show("The \(forestMonster) ran away.")
                show("You picked up $1.")
                health = health - healthLose
                wallet = wallet + 1
            }

            
        }else if gameplay == 2 {
            //Player has chance of finding coins, this is determined by luck
            
            show("You scavenge through the bushes.")
            let roll = playerDice[0]
            let outcome = coinFind(playerRoll: roll, chance: luck)
            
            if outcome == true {
                sleep(1)
                show("You found a coin!")
                wallet = wallet + 1
                show("Money: $\(wallet)")
                score = score + 1
                
            }else if outcome == false {
                sleep(1)
                show("You found nothing...")
            }
            
        }else if gameplay == 3 {
            show("You wandered around in circles.")
        }
        
    }else if action == "STATS" {
        //shows all stats of the player
        
        show("____________________________")
        show("____________________________")
        show("Hero Name: \(name)")
        show("")
        show("HP: \(health)")
        show("MP: \(mana)")
        show("ATK: \(attack)")
        show("MAG: \(magic)")
        show("LUCK: \(luck)")
        show("WEAPON: \(weapon)")
        show("CLASS: \(role)")
        show("MONEY: $\(wallet)")
        show("____________________________")
        show("____________________________")
    }
    
    //Transitions to the next Act of the Game
    if killcountForest &gt;= 10 {
    
    //Act Two
    if actTwo == false {
        sleep(1)
        
        show("As you explore you come across a village...")
        show("A sign reads:")
        sleep(1)
        show("|[WELCOME TO KANDELTOWN]|")
        
        show("____________________________")
        show("__CHAPTER TWO:______________")
        show("____________________________")
        show("__THE CITADEL____________")
        show("____________________________")
        
        while health &gt; 0 &amp;&amp; actTwo == false {
        
        show("[ INN / EXPLORE / STATS / SHOP ]")
        
        let action = askForChoice(options: ["INN", "EXPLORE", "STATS", "SHOP"])
        
        if action == "INN" {
            show("You walk over to a old run down inn.")
            show("Upon entering you feel a warmth of comfort from the fireplace.")
            show("[ STAY FOR A NIGHT / GO BACK ]")
            let sleepChoice = askForChoice(options: ["STAY", "LEAVE"])
            
            if sleepChoice == "STAY" {
                show("Spend $5 to stay the night?")
                
                let sleepChoice2 = askForChoice("Money: $\(wallet)", options: ["Yes", "No"])
                
                if sleepChoice2 == "Yes" {
                    if wallet &gt;= 5 {
                        show("You gave the innkeeper the $5 and shows you to your room...")
                        show("You are introduced to a comfy bed and doze off...")
                        sleep(1)
                        show("After a good night's rest you recover 5 HP and 3 MP!")
                        health = health + 5
                        mana = mana + 3
                        wallet = wallet - 5
                        score = score + 1
                        
                    }else {
                        show("You do not have enough money to stay the night...")
                    }
                    
                }else if sleepChoice2 == "No" {
                    show("You decided to brave it out in the streets and left the inn...")
                }
                
            }else if sleepChoice == "LEAVE" {
                //Should be empty unless dialogue is desired...
            }
            
            
        }else if action == "EXPLORE" {
            //Randomizes Outcomes 
            randomScenarios.shuffle()
            alleywayScenarios.shuffle()
            monsterNameForest.shuffle()
            playerDice.shuffle()
            monsterDice.shuffle()
            losePenalty.shuffle()
            coinValue.shuffle()
            
            let gameplay = randomScenarios[0]
            let alleyway = alleywayScenarios[0]
            if gameplay == 1 {
                show("You walk over to the alleyway...")
                if alleyway == 1 {
                    show("You see a drunken guard pulling away a damsel in distress.")
                    show("You tell the man to knock it off")
                    show("In a fit, he draws his sword against you! ‚öîÔ∏è")
                    
                    let heroRoll = playerDice[0]
                    let guardRoll = monsterDice[0] + 15
                    
                    if role == "mage" {
                        bonus = bonus + magic + (attack / 10)
                    }else if role == "knight" {
                        bonus = bonus + attack 
                    }else if role == "rogue"{
                        bonus = bonus + (attack + luck / 2 )
                        
                    }
                    
                    show("You dealt damage with your \(weapon)!")
                    sleep(1)
                    show("")
                    let victor = battle(playerRoll: heroRoll, monsterRoll: guardRoll, addIn: bonus)
                    
                    if victor == true {
                        show("You attack with your \(weapon) to deal a devastating blow to the guard's shins.")
                        show("The guard is overwhelmed by your prowess,")
                        show("humiliated, he calls it a day, unhands the distressed damsel, and vows to get back at you again.")
                        show("The lady expresses her gratitude, she fumbles through her purse and hands you small bag of coins.")
                        show("You have won $15")
                        wallet = wallet + 15
                        score = score + 1
                        
                    }else if victor == false {
                        healthLose = losePenalty[0]
                        show("You tried to strike the guard at his chest, but his reflexes proved too to be too swift.")
                        show("He jabs you in the arm with the hilt of his blade.")
                        show("Dazed, you lose your balance and fall to your knees...")
                        show("As you try to get back to your senses,")
                        sleep(1)
                        show("you find that the lady has already made her escape, and called the authorities.")
                        show("Soldiers take the man away and you get back on your feet.")
                        sleep(1)
                        show("You loss \(healthLose) HP...")
                        health = health - healthLose
                    }
                    
                }else if alleyway == 2 {
                    show("You meet a merchant bearing a map...")
                    show("In his hands are a map to a dungeon.")
                    show("Do you wish to hire him to take you there?")
                    show("[ YES / NO ]")
                    
                    let buyMerchant = askForChoice(options: ["Yes", "No"])
                    
                    if buyMerchant == "Yes" {
                        show("Spend $100 to hire the merchant?")
                        
                        let enterDungeon = askForChoice("Money: $\(wallet)", options: ["Yes","No"])
                        
                        if enterDungeon == "Yes" {
                            if wallet &gt;= 100 {
                                show("You handed the merchant a bag of gold and the merchant packs his bags and shows you the way...")
                                show("")
                                show("____________________________")
                                show("_______üë§_________‚öîÔ∏èüóª‚öîÔ∏è____")
                                show("____________________________")
                                
                                wallet = wallet - 100
                                score = score + 1
                                actTwo = true
                                sleep(1)
                                
                            }else {
                                show("You do not have enough money to hire the merchant...")
                            }
                            
                        }else if enterDungeon == "No" {
                            show("You decided it wasn't worth it and turned back...")
                        }
                    }
                    
                }else if alleyway == 3 {
                    show("You hear a rustling sound...")
                    sleep(1)
                    show("A tiny black cat scurries past you, meows and disappears out of sight.")
                }else if alleyway == 4 {
                    show("You then take a turn into the outskirts of the town...")
                    show("All of a sudden you get ambushed by a \(forestMonster)!‚öîÔ∏è")
                    
                    let heroRoll = playerDice[0]
                    let mobRoll = monsterDice[0] + 5
                    
                    if role == "mage" {
                        bonus = bonus + magic + (attack / 10)
                    }else if role == "knight" {
                        bonus = bonus + attack
                    }else if role == "rogue"{
                        bonus = bonus + (attack + luck / 2 )
                        
                    }
                    
                    show("You dealt damage with your \(weapon)!")
                    sleep(1)
                    show("")
                    let victor = battle(playerRoll: heroRoll, monsterRoll: mobRoll, addIn: bonus)
                    
                    if victor == true {
                        coinGive = coinValue[0]
                        show("The \(forestMonster) tried to retaliate...but failed.")
                        show("You deal a final blow to the \(forestMonster) with your \(weapon)")
                        show("You have slain the \(forestMonster)!")
                        show("You have won $\(coinGive)")
                        wallet = wallet + coinGive
                        killcountForest = killcountForest + 1
                        score = score + 1
                        
                    }else if victor == false {
                        healthLose = losePenalty[0]
                        show("The \(forestMonster) tried to retaliate...and struck you back!")
                        show("You loss \(healthLose) health...")
                        show("The \(forestMonster) ran away.")
                        show("You picked up $1.")
                        health = health - healthLose
                        wallet = wallet + 1
                    }
                }
                
            }else if gameplay == 2 {
                //Player has chance of finding coins, this is determined by luck
                
                show("As you walk across the town...")
                let roll = playerDice[0]
                let outcome = coinFind(playerRoll: roll, chance: luck)
                
                if outcome == true {
                    sleep(1)
                    show("You found a coin!")
                    wallet = wallet + 1
                    score = score + 1
                    show("Money: $\(wallet)")
                    
                }else if outcome == false {
                    sleep(1)
                    show("You see the road riddled with shops and passerby.")
                }
            }else if gameplay == 3 {
                show("You go over to the farm and pat the head of a chicken.")
            }
            
        }else if action == "STATS" {
            //shows all stats of the player
            
            show("____________________________")
            show("____________________________")
            show("Hero Name: \(name)")
            show("")
            show("HP: \(health)")
            show("MP: \(mana)")
            show("ATK: \(attack)")
            show("MAG: \(magic)")
            show("LUCK: \(luck)")
            show("WEAPON: \(weapon)")
            show("CLASS: \(role)")
            show("MONEY: $\(wallet)")
            show("____________________________")
            show("____________________________")
            
        }else if action == "SHOP" {
            show("You walk around the town and decide to check out the shop.")
            sleep(1)
            var stayShop = true
            
            show("____________________________")
            show("Your Money : $\(wallet)")
            show("____________________________")
            show("Battle-Axe: +7 ATK")
            show("Ninja Star: +3 ATK || +2 LUCK")
            show("Bow and Arrow: +3 ATK || +2 HP")
            show("Shiv: +2 ATK || +1 LUCK")
            show("Fire Staff: +7 MAG || +3 MP")
            show("____________________________")
            
            while stayShop == true {
                
                let weaponStock = askForChoice(options: ["Battle-Axe", "Ninja Star", "Bow and Arrow", "Shiv", "Fire Staff", "Leave Shop"])
                
                if weaponStock == "Battle-Axe" {
                    show("Do you want to purchase this \(weaponStock) for $35?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt; 35 {
                            wallet = wallet - 35
                            show("You have purchased a \(weaponStock)")
                            weapon = "Battle-Axe"
                            attack = attack + 7
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }

                    }
                    
                }else if weaponStock == "Ninja Star"{
                    show("Do you want to purchase this \(weaponStock) for $25?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt; 25 {
                            wallet = wallet - 25
                            show("You have purchased a \(weaponStock)")
                            weapon = "Ninja Star"
                            attack = attack + 3
                            luck = luck + 2
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                }else if weaponStock == "Bow and Arrow"{
                    show("Do you want to purchase this \(weaponStock) for $30?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt; 30 {
                            wallet = wallet - 30
                            show("You have purchased a \(weaponStock)")
                            weapon = "Bow and Arrow"
                            attack = attack + 3
                            health = health + 2
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                    
                }else if weaponStock == "Shiv"{
                    show("Do you want to purchase this \(weaponStock) for $15?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt; 15 {
                            wallet = wallet - 15
                            show("You have purchased a \(weaponStock)")
                            weapon = "Shiv"
                            attack = attack + 2
                            luck = luck + 1
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                    
                }else if weaponStock == "Fire Staff"{
                    show("Do you want to purchase this \(weaponStock) for $35?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt; 35 {
                            wallet = wallet - 35
                            show("You have purchased a \(weaponStock)")
                            weapon = "Fire Staff"
                            magic = magic + 7
                            mana = mana + 3 
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                    
                }else if weaponStock == "Leave Shop" {
                    show("You decided to save your money for later...")
                    stayShop = false
                }
            }
            }

        }
        //Brought out of both while loops and brought to Game Over Screen
        
    }
    //Act Three
    show("____________________________")
    show("__CHAPTER THREE:____________")
    show("____________________________")
    show("__INTO THE DARKNESS______")
    show("____________________________")
    
    while health &gt; 0 {
        
        while killCountDungeon &lt; 20 {
            
        show("[ REST / EXPLORE / STATS ]")
        
        let action = askForChoice(options: ["REST", "EXPLORE", "STATS"])
        
        if action == "REST" {
            show("You rested and restored your health and mana by 1.")
            health = health + 1
            mana = mana + 1
            
        }else if action == "EXPLORE" {
            
            //Randomizes Outcomes 
            randomScenarios.shuffle()
            playerDice.shuffle()
            monsterDice.shuffle()
            losePenalty.shuffle()
            coinValue.shuffle()
            monsterNameDungeon.shuffle()
            
            let gameplay = randomScenarios[0]
            
            if gameplay == 1 {
                //Battle Sequence
                dungeonMonster = monsterNameDungeon[0]
                
                show("You stumbled across a \(dungeonMonster)!‚öîÔ∏è")
                let heroRoll = playerDice[0]
                let mobRoll = monsterDice[0] + 25
                
                if role == "mage" {
                    bonus = bonus + magic + (attack / 10)
                }else if role == "knight" {
                    bonus = bonus + attack
                }else if role == "rogue"{
                    bonus = bonus + (attack + luck / 2 )
                    
                }
                
                show("You dealt damage with your \(weapon)!")
                sleep(1)
                show("")
                let victor = battle(playerRoll: heroRoll, monsterRoll: mobRoll, addIn: bonus)
                
                if victor == true {
                    coinGive = coinValue[0]
                    show("The \(dungeonMonster) tried to fight back...but failed.")
                    show("You deal a final blow to the \(dungeonMonster) with your \(weapon)")
                    show("You have slain the \(dungeonMonster)!")
                    show("You have won $\(coinGive)")
                    wallet = wallet + coinGive
                    killCountDungeon = killCountDungeon + 1
                    score = score + 1
                    
                }else if victor == false {
                    healthLose = losePenalty[0]
                    show("The \(dungeonMonster) tried to retaliate...and struck you back!")
                    show("You loss \(healthLose) health...")
                    show("The \(dungeonMonster) ran away.")
                    show("You picked up $1.")
                    health = health - healthLose
                    wallet = wallet + 1
                }
                
                
            }else if gameplay == 2 {
                //Player has chance of finding coins, this is determined by luck
                
                show("While walking along the confines of the dungeon...")
                let roll = playerDice[0]
                let outcome = coinFind(playerRoll: roll, chance: luck)
                
                if outcome == true {
                    sleep(1)
                    show("You found a coin!")
                    wallet = wallet + 1
                    score = score + 1
                    show("Money: $\(wallet)")
                    
                }else if outcome == false {
                    sleep(1)
                    show("You run your fingers through the pebbles and moss...")
                }
                
            }else if gameplay == 3 {
                show("You alight a torch to have a clearer vision of the path towards you.")
            }
            
        }else if action == "STATS" {
            //shows all stats of the player
            
            show("____________________________")
            show("____________________________")
            show("Hero Name: \(name)")
            show("")
            show("HP: \(health)")
            show("MP: \(mana)")
            show("ATK: \(attack)")
            show("MAG: \(magic)")
            show("LUCK: \(luck)")
            show("WEAPON: \(weapon)")
            show("CLASS: \(role)")
            show("MONEY: $\(wallet)")
            show("____________________________")
            show("____________________________")
            }
        }
        //Final Boss
        sleep(1)
        show("After fighting endless foes in the dungeon,")
        show("You come across a set of iron doors...")
        show("A treasure chest from below breaks through the cracks beneath you..")
        sleep(1)
        show("[ HP RESTORED BY +50 ]")
        show("[ YOU EARNED 50 COINS! ]")
        wallet = wallet + 50
        health = health + 50
        score = score + 1
        sleep(1)
        show("You polish your \(weapon) and prepare to the final battle that awaits you..")
        show("You see the merchant at the edge of the doors...")
        show("He's opened up a temporary shop!")
        show("Check out the shop?")
        show("[ ENTER / STAY ]")
        
        let finalShopStay = askForChoice(options: ["ENTER","STAY"])
        
        if finalShopStay == "ENTER" {
            
            var stayShop = true
            
            show("____________________________")
            show("Your Money : $\(wallet)")
            show("____________________________")
            show("Great Sword: +12 ATK || +5 HP")
            show("Twisted Dagger: +6 ATK || +6 LUCK")
            show("Sorcerer's Orb: +15 MAG || +5 MP")
            show("____________________________")
            
            while stayShop == true {
                
                let weaponStock = askForChoice(options: ["Great Sword", "Twisted Dagger", "Sorcerer's Orb", "Leave Shop"])
                
                if weaponStock == "Great Sword" {
                    show("Do you want to purchase this \(weaponStock) for $100?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt;= 100 {
                            wallet = wallet - 100
                            show("You have purchased a \(weaponStock)")
                            weapon = "Great Sword"
                            attack = attack + 12
                            health = health + 5
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                        
                    }
                    
                }else if weaponStock == "Twisted Dagger"{
                    show("Do you want to purchase this \(weaponStock) for $100?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt;= 100 {
                            wallet = wallet - 100
                            show("You have purchased a \(weaponStock)")
                            weapon = "Twisted Dagger"
                            attack = attack + 6
                            luck = luck + 6
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                }else if weaponStock == "Sorcerer's Orb"{
                    show("Do you want to purchase this \(weaponStock) for $100?")
                    show("Your Money : $\(wallet)")
                    let weaponPurchase = askForChoice(options: ["Yes","No"])
                    if weaponPurchase == "Yes"{
                        if wallet &gt;= 100 {
                            wallet = wallet - 100
                            show("You have purchased a \(weaponStock)")
                            weapon = "Sorcerer's Orb"
                            magic = magic + 15
                            mana = mana + 5
                            
                        } else{
                            show("You do not have enough money to purchase a \(weaponStock)...")
                        }
                    }
                    
                }else if weaponStock == "Leave Shop" {
                    show("You decided to save your money for later...")
                    stayShop = false
                }
            }
            
        }else if finalShopStay == "STAY" {
            show("You decide to hold on to your money.")
        }
        //Final Fight
        
        show("You bid the merchant farewell and head towards the doors....")
        sleep(1)
        show("...")
        sleep(1)
        show("...")
        sleep(1)
        health = -1
        }
    }
    
}
//Game Over
sleep(1)

if killCountDungeon &lt; 20 {
    show("")
    show("You sustained too much damage!")
    show("Your body grows weak...")
    show("HP dropped down to 0")
    show("")
    sleep(1)
    show("[ ENDING 1 OF 3 ]")
    show("")
    show("")
    show(" [ GAME OVER ] ")
    
        //Highscore Check
        showHighscore()
    

}else if killCountDungeon &gt;= 20 {
    show("")
    show("____________________________")
    show("_______üë§_________‚öîÔ∏èüö™‚öîÔ∏è____")
    show("____________________________")
    show("")
    sleep(1)
    show("____________________________")
    show("__CHAPTER FOUR:_____________")
    show("____________________________")
    show("__THE FIERY PIT_______")
    show("____________________________")
    sleep(1)
    show("")
    
    show("The room is engulfed in a blanket of darkness...")
    show("Silence echoes throughout the barren walls..")
    show("As you step in closer..")
    sleep(1)
    show("...")
    sleep(1)
    show("You hear a violent spark")
    show("The room surrounds you in flames")
    show("üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•")
    show("")
    show("A demon from the pits of Hades blocks your path!‚öîÔ∏è")
    sleep(1)
    show("You feel a shiver down your spine but keep your feet planted on the ground.")
    show("A rush of adrenaline surges through your veins")
    show("Clasping your \(weapon), you get ready for the final battle!")
    show("You lunge at the fiery foe and attack with all your might!")
    sleep(1)
    
    let heroRoll = playerDice[0]
    let mobRoll = monsterDice[0] + 50
    
    if role == "mage" {
        bonus = bonus + magic + (attack / 10)
    }else if role == "knight" {
        bonus = bonus + attack
    }else if role == "rogue"{
        bonus = bonus + (attack + luck / 2 )
        
    }
    
    show("Your attack pierces the wicked beast!")
    sleep(1)
    show("")
    let victor = battle(playerRoll: heroRoll, monsterRoll: mobRoll, addIn: bonus)
    
    if victor == true {
        coinGive = coinValue[0] + 500
        show("The demon lashed out with an arrogant flurry of attacks, but you managed to dodge them successfully.")
        show("Weakened, the demon grows weary.")
        show("You deal a blow to the beast once more!")
        show("The demon's strength gives way, and it collapses onto the ground.")
        show("You have slain the Demon!")
        show("You pick up $\(coinGive).")
        score = score + 1
        wallet = wallet + coinGive
        finalBoss = true
        
    }else if victor == false {
        show("The demon lashed out with an arrogant flurry of attacks, your body is struck with cuts and burns.")
        show("Weakened, you begin to grow weary.")
        show("The demon deals out a lash of attacks once more!")
        show("Your strength gives way, and you collapse onto the ground.")
        show("")
        show("You sustained too much damage!")
        show("Your body grows weak...")
        show("HP dropped down to 0")
        show("")
        sleep(1)
        show("[ ENDING 1 OF 3 ]")
        show("")
        show("")
        show(" [ GAME OVER ] ")
        
        sleep(1)
        show("")
        sleep(1)
        show("")
        if score &gt; heroScore {
            showHighscore()
        }
    }
    
}

//NEXT CHAPTER CONTINUATION 
    
    //Saves If Highscore 
        showHighscore()
    
if finalBoss == true {
    show("")
    sleep(1)
    show("The battle has been won, and you reign victorious...")
    sleep(2)
    show("")
    show("____________________________")
    show("__CHAPTER FIVE:_____________")
    show("____________________________")
    show("__THE LEGACY_________")
    show("____________________________")
    show("")
    show("A story of heroes throughout the ages, what they leave behind is a legacy that brings forth the world;")
    sleep(1)
    show("Peace")
    sleep(1)
    show("Courage")
    sleep(1)
    show("Bravery")
    sleep(1)
    show("Determination")
    sleep(1)
    show("It's those values that they instill unto the next generation...")
    show("A new page to be turned.")
    sleep(1)
    show("A new story built on the foundation of the one's of before...")
    sleep(2)
    show("These are one these stories...")
    sleep(1)
    show("")
    show("____________________________")
    show("__BOOK TWO:________________")
    show("____________________________")
    show("__THE FORGOTTEN FABLE___")
    show("____________________________")
    
        //Saves Book Two Unlock 
    playGame2 = true
    bookTwoUnlock = true
    UserDefaults().set(bookTwoUnlock, forKey: "btu")
    
}
}
//BOOK 2 BEGINS HERE vvvvvv

if playGame2 == true {
    sleep(2)
    show("")
    show("____________________________")
    show("_______üë§__________üè†_____")
    show("____________________________")
    sleep(1)
    show("")
    show("(Wake up)")
    sleep(2)
    show("(Wake up)")
    sleep(2)
    show("(Come on now, WAKE UP!)")
    sleep(2)
    show("* muffled groaning *")
    sleep(2)
    show("[ wake up / go back to sleep ]")
    let theFirstChoice = askForChoice(options: ["Wake Up","Stay Asleep"])
    show("...")
    sleep(1)
    if theFirstChoice == "Wake Up" {
        show("You rub your sleepy eyes and get out of bed.")
    }else if theFirstChoice == "Stay Asleep" {
        show("You continue to rest your eyes, lulling yourself into a more")
        show("Deeper...")
        sleep(2)
        show("Ever relaxing...")
        show("Calm...")
        sleep(4)
        show("Letting your mind just melt away")
        show("Into the land of drea-")
        show("WHAAAAAAAAAAAAACK!!!")
        show("...")
        sleep(2)
        show("(I TOLD YOU TO WAKE UP DANG IT!)")
        show("The sheer sternness of the voice wakes you up.")
        sleep(2)
    }
    
    show("You look up to see the Town's Wizard, Morlen (Merlin's Lesser Known Brother), standing by your bedside window.")
    sleep(2)
    show("(Good morning, Atlas.)")
    show("[ kind / hostile ]")
    
    let morningGreeting = askForChoice(options: ["kind", "hostile"])
    if morningGreeting == "kind" {
        show("It's a beautiful morning, Morlen")
        show("(Indeed it is, young one)")
    }else if morningGreeting == "hostile" {
        show("Uggggghh... can't I just stay in for like, ten more minutes Old Man..?")
        show("(Come on nowwww, we don't have all day!)")
    }
    show("You drag yourself out of bed, puffing up the pillows and setting it down in a neat fashion.")
    sleep(2)
    show("(Today's the day of the Fire Springs Tournament)")
    sleep(2)
    show("A tournament of gladiators and heroes afar, fighting hand to hand for a seat at the King's Hand.")
    sleep(2)
    show("(Are you all set for the battle ahead?)")
    sleep(1)
    show("I think I have everything all set.")
    sleep(2)
    show("(Get ready, we'll be on our way soon...)")
    sleep(1)
    show("")
    show("")
    
    show("____________________________")
    show("_______üë§__________‚öóÔ∏è_____")
    show("____________________________")
    sleep(1)
    show("")
    show("")
    
    show("[ üó° THE FIRE SPRINGS TOURNAMENT üó° ]")
    sleep(1)
    show("")
    show("")
    show("_________________________")
    show("_________________________")
    show("[ THE NEWBIE BRACKET ]")
    show("")
    show("[ THE HEROS GAUNTLET ]")
    show("")
    show("[ THE JADE COLLOSEUM ]")
    show("")
    show("T[ HAND OF THE KING ]T")
    show("_________________________")
    show("_________________________")
    sleep(2)
    show("")
    show("Start From The Bottom, And Make Your Way Up To The Top")
    sleep(2)
    show("You enter the Tournament Gates...")
    sleep(2)
    show("...")
    show("[ THE NEWBIE BRACKET ]")
    show("&lt; BATTLE ONE &gt;")
    sleep(1)
    show("")
    show("")
    show("{ ATLAS THE NEWBIE VS DIRK THE SPIKER }")
    show("")
    
    while healthPartTwo &gt; 0 {
        //shuffles enemy move
        // JAB = 1 // TAUNT = 2 // GUARD = 3 
        
        if enemyHealth &gt; 1 {
        
            //Player Action Choice
            show("")
            show("[ATLAS' HP : \(healthPartTwo)]")
            show("[DIRK'S : \(enemyHealth)]")
            
        show("[ JAB / TAUNT / GUARD ]")
        let battleAction = askForChoice(options: ["JAB","TAUNT","GUARD"])
        
            randomScenarios.shuffle()
            var enemyAction = randomScenarios.first
            
        if battleAction == "JAB" {
            if enemyAction == 1 {
                //JAB VS JAB
                show("You both go in for a punch at eachother!")
                sleep(1)
                show("[DIRK'S HEALTH DROPPED BY 10]")
                show("[YOUR HEALTH DROPPED BY 10]")
                healthPartTwo = healthPartTwo - 10
                enemyHealth = enemyHealth - 10
                
            }else if enemyAction == 2 {
                //JAB VS TAUNT
                show("DIRK tried to shake you with his words, but you clock him in the face like the nerd he is!")
                sleep(1)
                show("[DIRK'S HEALTH DROPPED BY 10]")
                enemyHealth = enemyHealth - 10
                
            }else if enemyAction == 3 {
                //JAB VS GUARD
                show("You attempted to strike DIRK with your fist, only to have it blocked by his sheer awesome blocking skills!")
                sleep(1)
            }
            
        }else if battleAction == "TAUNT" {
            if enemyAction == 1 {
                //TAUNT VS JAB
                show("You try to spit your hardest diss track on DIRK to shake up his nerves...")
                sleep(1)
                show("Only to have your body yeeted away by a powerful punch! OUCH!")
                sleep(1)
                healthPartTwo = healthPartTwo - 10
                
            }else if enemyAction == 2 {
                //TAUNT VS TAUNT
                show("Both of you kind of just shout at eachother like third graders..")
                sleep(1)
                show("You know this is a gladiator fight right?")
                sleep(1)
                
            }else if enemyAction == 3 {
                //TAUNT VS GUARD
                show("DIRK holds up his fists up in a defensive stance!")
                show("You lower your guard and poke fun at how stupid he looks lmao!")
                sleep(1)
                show("...and although DIRK is protected and adorned with armor capable of breaking the sharpest of blades")
                sleep(1)
                show("It cannot protect his feelings")
                show("[DIRK'S MOOD: SAD BOI HOURS]")
                show("[DIRK'S HEALTH DROPPED BY 10]")
                sleep(1)
                
                
            }
            
        }else if battleAction == "GUARD" {
            if enemyAction == 1 {
                //GUARD VS JAB
                show("DIRK sends a flurry of punches at your wake!")
                sleep(1)
                show("You smirk as you pull a Matrix‚Ñ¢Ô∏è and dodge them like a boss!")
                show("DIRK has 'nani' written all over his face.")
                sleep(1)
                
            }else if enemyAction == 2 {
                //GUARD VS TAUNT
                show("You draw in mana amd pull up a magic barrier, fending you of all attacks!")
                sleep(1)
                show("DIRK laughs at you hysterically and you realize..")
                sleep(1)
                show("You have no idea how to use magic and just look dumb lmao")
                sleep(1)
                show("[SELF ESTEEM : CRIPPLED]")
                show("[YOUR HEALTH DROPPED BY 10]")
                healthPartTwo = healthPartTwo - 10
                
            }else if enemyAction == 3 {
                //GUARD VS GUARD
                show("You raise your arms awaiting to block an attack!")
                show("DIRK does the same!")
                sleep(2)
                show("...yeah this isn't interesting")
                
            }
            randomScenarios.shuffled()
            //end of fight options 
        }
        
    }else {
            //Win + End Game
            show("You parry a blow and quickly move behind him,")
            show("Before he could react you knock him down and cuff him to the ground!")
            sleep(1)
            show("DIRK struggles but eventually admits his defeat.")
            show("[VICTORY!]")
            sleep(4)
            show("")
            show("")
            show("Hey! This is the game dev")
            sleep(1)
            show("That's the end of the BOOK 2 Demo!")
            show("I hope you enjoyed the game!")
            sleep(1)
            show("[END OF GAME]")
            healthPartTwo = -10
            endGame = true
            
        }
        
}
    if enemyHealth &gt; 1 {
    //Death 
    show("DIRK then launches a devastating blow!")
    show("You've taken too much damage!")
    sleep(1)
    show("And as you fiddle through your pocket for the receipt to return it, DIRK beats you down to a pulp..")
    sleep(2)
    show("[GAME OVER]")
}
    if endGame == false {
        show("")
        show("You both fall on the ground in exhaustion...")
        show("[THE BATTLE IS TIED]")
            sleep(2)
        show("")
        show("")
            show("Hey! This is the game dev")
            sleep(1)
            show("That's the end of the BOOK 2 Demo!")
            show("I hope you enjoyed the game!")
            sleep(1)
            show("[END OF GAME]")
        
    }
    
}

</string>
			<key>ModifiedRange</key>
			<string>{145, 53251}</string>
			<key>OriginalContent</key>
			<string>show("What is your name?")

let name = ask("Name")

show("Hi " + name)
</string>
			<key>OriginalRange</key>
			<string>{145, 71}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Answers.playgroundchapter/Pages/Text.playgroundpage/Contents.swift</string>
</dict>
</plist>
